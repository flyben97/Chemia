# ===================================================================
#           CRAFT (Chemical Representation and Analysis)
#                 实验总配置文件 (v0.9.4)
# ===================================================================
#
# 使用说明:
# 1. 修改 "experiment_name" 和 "task_type" 以符合您的实验目的。
# 2. 在 "data" 部分，选择四种 "source_mode" 中的一种，并填写对应的配置。
#    确保只保留一种模式的配置是激活的，其他模式的配置可以注释掉或忽略。
# 3. 在 "features" 部分，配置您需要动态生成的分子特征和是否进行标准化。
# 4. 在 "split_mode" 和 "split_config" 部分，配置数据拆分方式。
#    (注意: 此部分仅在 data.source_mode = 'single_file' 或 'features_only' 时有效)。
# 5. 在 "training" 部分，选择要训练的模型和超参数搜索的次数。
#
# ===================================================================


# --- 1. 实验基本设置 ---
experiment_name: "ET30" # 实验名称，将用于创建输出文件夹
task_type: "regression"            # 任务类型: "regression", "binary_classification", or "multiclass_classification"

# --- 2. 数据源配置 ---
data:
  # 选择一种数据源模式 (四选一):
  # - "single_file":       提供一个含SMILES的文件，由程序自动拆分。
  # - "pre_split_t_v_t":   提供预拆分的含SMILES的训练/验证/测试集。
  # - "pre_split_cv":      提供预拆分的含SMILES的训练/测试集，用于交叉验证。
  # - "features_only":     提供一个纯特征+目标的文件，不含SMILES。
  # 注意: 只能选择一种模式，其他模式的配置将被忽略。
  # 如果需要使用其他模式，请注释掉不需要的配置。
  # 当选择 "features_only" 时，特征生成配置将被忽略，但数据集划分方式，以及是否提供划分好的数据集等功能仍然支持

  source_mode: "single_file" # <--- 在这里选择你的模式

  # --- 模式1: single_file ---
  # (当 source_mode: "single_file" 时使用此配置)
  single_file_config:
    main_file_path: "data/ET30_standardized_cleaned.csv" # 包含SMILES和目标值的主数据文件
    smiles_col: "Standardized_SMILES"                 # SMILES列的名称
    target_col: "ET30"    # 目标列的名称，在化学任务中，通常可以是Yield, energy, Activity等

    # (可选) 如果预计算的特征与SMILES在同一个文件里
    precomputed_features:
      path: null                         # null 表示使用 main_file_path
      # 指定特征所在的列。格式: "start:end" (不含end), "start:", ":end", 或列名列表
      # feature_columns: "8:"              # 示例: 从第8列到最后一列都是特征，如果是第8列到第10列，则使用 "8:10"
      feature_columns: null             # 示例: 如果没有预计算特征，则设为 null
  
  # 默认选择模式1，当要启用其他模式时，对相应模式取消注释（在VScode里面选中Ctrl+/快速取消注释）
  # --- 模式2: pre_split_t_v_t ---
  # (当 source_mode: "pre_split_t_v_t" 时使用此配置)
  # pre_split_t_v_t_config:
  #   train_path: "data/user_split/train.csv"
  #   valid_path: "data/user_split/valid.csv"
  #   test_path: "data/user_split/test.csv"
  #   smiles_col: "SMILES"
  #   target_col: "TARGET"
  #   precomputed_features:
  #     feature_columns: null # 假设没有预计算特征

  # --- 模式3: pre_split_cv ---
  # (当 source_mode: "pre_split_cv" 时使用此配置)
  # pre_split_cv_config:
  #   train_path: "data/user_split/train_for_cv.csv"
  #   test_path: "data/user_split/test_for_cv.csv"
  #   smiles_col: "SMILES"
  #   target_col: "TARGET"
  #   precomputed_features:
  #     feature_columns: null # 假设没有预计算特征

  # --- 模式4: features_only ---
  # (当 source_mode: "features_only" 时使用此配置)
  # features_only_config:
  #   file_path: "data/features_and_target.csv"
  #   target_col: "activity"
  #   feature_columns: "1:1001" # 假设特征在第1列到第1000列

# --- 3. 动态特征生成配置 (在 features_only 模式下将被忽略) ---
# 注意: 只有在 source_mode 为模式1，2，3时，此部分才会被使用。因为计算的特征需要SMILES列。
features:
  # 要动态生成的特征列表。如果不需要，设为 []
  # 可用的特征类型包括: 
  # "maccs", "morgan", "rdkit", "atompair", "torsion"，"rdkit_descriptors"
  # 'chemberta', 'molt5', 'chemroberta', 'unimol'
  # 注意'chemberta', 'molt5', 'chemroberta', 'unimol'等模型需要额外的模型文件下载
  # 这些模型会在初次使用的时候进行下载，如果需要全部下载预计需要6GB的空间

  generators:
    - type: "morgan"
      nBits: 1024
      radius: 2
    - type: "rdkit_descriptors"
    - type: "unimol"
      model_version: "v2"
      model_size: "84m"
      
  # 是否对最终的特征矩阵进行标准化处理 (StandardScaler)
  scaling: true

# --- 4. 数据拆分与验证策略 (仅当 source_mode 为 'single_file' 或 'features_only' 时有效) ---
# 选择一种模式: "train_valid_test" 或 "cross_validation"
# 通常情况下，我们在数据量较大时使用 "train_valid_test"，在数据量较小时使用 "cross_validation"。
split_mode: "train_valid_test"

split_config:
  # 当 split_mode 为 "train_valid_test" 时使用
  train_valid_test:
    train_size: 0.8
    valid_size: 0.1
    test_size: 0.1
    random_state: 42

  # 当 split_mode 为 "cross_validation" 时使用
  cross_validation:
    n_splits: 5           # 交叉验证的折数
    test_size_for_cv: 0.2 # 从总数据中分出20%作为最终的、独立的测试集
    random_state: 42

# --- 5. 模型训练配置 ---
training:
  # 要训练的模型列表。
  # 可用: xgb, lgbm, rf, cat, hgb, dt, knn, svr, ridge, ann, adab, lr, svc, krr
  models_to_run:
    # - "xgb"
    # - "cat"
    # - "rf"
    - "ann"
    - "svr"
  
  # Optuna 超参数优化的试验次数
  # 当数据量较大时，建议设置为较少的实验轮数
  # 当数据量较小时，可以增加试验轮数以获得更好的超参数。
  n_trials: 100
  
  # HPO策略:
  # - 如果 split_mode 是 cross_validation，程序会自动使用 CV 进行 HPO。
  # - 如果 split_mode 是 train_valid_test，程序会使用 validation set 进行 HPO。
  
  # (可选) 减少Optuna的日志输出
  quiet_optuna: true